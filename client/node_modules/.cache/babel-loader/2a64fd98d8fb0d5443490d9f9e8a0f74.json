{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mack/Documents/exercise-tracker/Exerice-tracker/client/src/components/edit-exercise.component.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\"; //local \n\nvar URL = \"http://127.0.0.1:1414\"; //minikube\n//var URL = \"http://192.168.39.9:30014\"\n\nclass EditExercise extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      username: '',\n      description: '',\n      duration: 0,\n      date: new Date(),\n      users: []\n    };\n  } //Is called right before anything load on the page (testing users hard coding:)\n\n\n  componentDidMount() {\n    axios.get(`${URL}:1414/exercises/` + this.props.match.params.id).then(response => {\n      this.setState({\n        username: response.data.username,\n        description: response.data.description,\n        duration: response.data.duration,\n        date: new Date(response.data.date)\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(`${URL}:1414/users/`).then(response => {\n      //check if the returned response is not empty\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username)\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    //Prevent the html default submit behaviour \n    e.preventDefault(); //and do the following instead:\n\n    const exercise = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date\n    };\n    console.log(exercise); //Send exercise data to server\n\n    axios.post(`${URL}:1414/exercises/update/` + this.props.match.params.id, exercise).then(res => console.log(res.data)).catch(err => console.log(err)); //Then return user to home page \"/\"\n\n    window.location = \"/\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit New Exercise Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: \"userInput\",\n            required: true,\n            className: \"form-control\",\n            value: this.state.username,\n            onChange: this.onchangeUsername,\n            children: this.state.users.map(function (user) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: user,\n                children: user\n              }, user, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            className: \"form-control\",\n            value: this.state.description,\n            onChange: this.onChangeDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Duration (in minutes): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.duration,\n            onChange: this.onChangeDuration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: this.state.date,\n              onChange: this.onChangeDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Edit Exercise Log\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EditExercise;","map":{"version":3,"sources":["/home/mack/Documents/exercise-tracker/Exerice-tracker/client/src/components/edit-exercise.component.js"],"names":["React","Component","axios","DatePicker","URL","EditExercise","constructor","props","onChangeUsername","bind","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","state","username","description","duration","date","Date","users","componentDidMount","get","match","params","id","then","response","setState","data","catch","error","console","log","length","map","user","e","target","value","preventDefault","exercise","post","res","err","window","location","render","onchangeUsername"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport axios from \"axios\"\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\"\n\n//local \nvar URL = \"http://127.0.0.1:1414\"\n//minikube\n//var URL = \"http://192.168.39.9:30014\"\n\nclass EditExercise extends Component {\n    constructor(props) {\n        super(props)\n\n        this.onChangeUsername = this.onChangeUsername.bind(this)\n        this.onChangeDescription = this.onChangeDescription.bind(this)\n        this.onChangeDuration = this.onChangeDuration.bind(this)\n        this.onChangeDate = this.onChangeDate.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n\n        this.state = {\n            username: '',\n            description:'',\n            duration: 0,\n            date: new Date(),\n            users: [],\n        }\n    }\n    //Is called right before anything load on the page (testing users hard coding:)\n    componentDidMount() {\n        axios.get(`${URL}:1414/exercises/`+this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    username: response.data.username,\n                    description: response.data.description,\n                    duration: response.data.duration,\n                    date: new Date(response.data.date)\n                })\n            })\n            .catch(function(error) {\n                console.log(error)\n            })\n\n        axios.get(`${URL}:1414/users/`)\n            .then(response => {\n                //check if the returned response is not empty\n                if (response.data.length > 0) {\n                    this.setState({\n                        users: response.data.map(user => user.username),\n                    })\n                }\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    onChangeUsername(e){\n        this.setState({\n            username: e.target.value\n        })\n    }\n\n    onChangeDescription(e){\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    onChangeDuration(e){\n        this.setState({\n            duration: e.target.value\n        })\n    }\n\n    onChangeDate(date){\n        this.setState({\n            date: date\n        })\n    }\n\n    onSubmit(e){\n        //Prevent the html default submit behaviour \n        e.preventDefault()\n\n        //and do the following instead:\n        const exercise = {\n            username: this.state.username,\n            description: this.state.description,\n            duration: this.state.duration,\n            date: this.state.date\n        }\n\n        console.log(exercise)\n\n        //Send exercise data to server\n        axios.post(`${URL}:1414/exercises/update/`+this.props.match.params.id, exercise)\n            .then(res => console.log(res.data))\n            .catch((err) => console.log(err))\n\n        //Then return user to home page \"/\"\n        window.location = \"/\"\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Edit New Exercise Log</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Username: </label>\n                        <select ref=\"userInput\"\n                            required\n                            className=\"form-control\"\n                            value={this.state.username}\n                            onChange={this.onchangeUsername}>\n                            {\n                                this.state.users.map(function(user) {\n                                    return (\n                                        <option\n                                        key={user}\n                                        value={user}>{user} \n                                        </option>\n                                    )\n                                })\n                            }\n\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                            <label>Description: </label>\n                            <input type=\"text\"\n                                required\n                                className=\"form-control\"\n                                value={this.state.description}\n                                onChange={this.onChangeDescription}\n                                />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Duration (in minutes): </label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.duration}\n                            onChange={this.onChangeDuration}\n                            />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Date: </label>\n                        <div>\n                            <DatePicker\n                                selected={this.state.date}\n                                onChange={this.onChangeDate} \n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Edit Exercise Log\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default EditExercise\n\n"]},"metadata":{},"sourceType":"module"}